name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-server:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  
      
      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            server/node_modules
          key: npm-server-${{ runner.os }}-${{ hashFiles('server/package-lock.json') }}
          restore-keys: |
            npm-server-${{ runner.os }}-


      - name: Install Server Dependencies
        run: |
          cd server
          npm install --latest
      - name: Ensure Jest is Installed
        run: npm install --save-dev jest
  
      - name: Run Server Tests
        run: |
          cd server
          npm test
   
      - name: Fix Jest Permissions
        run: chmod +x node_modules/.bin/jest
  
  build-client:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            client/node_modules
          key: npm-client-${{ runner.os }}-${{ hashFiles('client/package-lock.json') }}
          restore-keys: |
            npm-client-${{ runner.os }}-
    

      - name: Install Client Dependencies
        run: |
          cd client
          npm install --latest

      - name: Run Client Tests
        run: |
          cd client
          npm test

  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  

      - name: Install Dependencies & Build
        run: |
          cd server
          npm install --latest

      - name: Deploy to Render
        run: curl "$RENDER_DEPLOY_HOOK"
        env:
          RENDER_DEPLOY_HOOK: ${{ secrets.RENDER_DEPLOY_HOOK }}

  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'  

      - name: Install Dependencies & Build
        run: |
          cd client
          npm install --latest
          npm run build
      
      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        run: vercel --prod --token=${{ secrets.VERCEL_TOKEN }} --yes